plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
	set('springCloudVersion', "2023.0.1")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.apache.commons:commons-lang3:3.14.0'

  // 레디스
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

  // security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

  // config
	implementation 'org.springframework.cloud:spring-cloud-starter-config:4.1.2'

	// sms 문자 인증
  implementation 'net.nurigo:sdk:4.3.0'

	//queydsl 의존성
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// https://mvnrepository.com/artifact/org.json/json -> JSON 의존성
	implementation 'com.googlecode.json-simple:json-simple:1.1'

  // OCI 의존성
	implementation 'com.oracle.oci.sdk:oci-java-sdk-objectstorage:2.8.1'
	implementation 'com.oracle.oci.sdk:oci-java-sdk-filestorage:2.8.1'
	implementation 'com.oracle.oci.sdk:oci-java-sdk-common:2.8.1'
	implementation 'org.glassfish.jersey.core:jersey-client:2.34'
	implementation 'org.glassfish.jersey.core:jersey-common:2.34'
	implementation 'org.glassfish.jersey.ext:jersey-entity-filtering:2.34'
	implementation 'org.glassfish.jersey.inject:jersey-hk2:2.34'
	implementation 'org.glassfish.jersey.media:jersey-media-json-jackson:2.34'
	implementation 'org.glassfish.jersey.connectors:jersey-apache-connector:2.34'
	implementation 'javax.xml.bind:jaxb-api:2.3.1'
	implementation 'javax.annotation:javax.annotation-api:1.3.2'
	implementation 'javax.ws.rs:javax.ws.rs-api:2.1.1'

	implementation 'com.fasterxml.jackson.core:jackson-core:2.16.1'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.16.1'
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.16.1'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		mavenBom "com.oracle.oci.sdk:oci-java-sdk-bom:2.8.1"
	}
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
}
